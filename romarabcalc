import java.util.Scanner;
import java.lang.String;
import org.apache.commons.lang3.StringUtils;
import java.util.InputMismatchException;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String str = scanner.nextLine();
        int index1 = str.indexOf(" ");
        int index2 = str.lastIndexOf(" ");
        var strLength = str.length();
        var sign = str.substring(index1 + 1, index2).charAt(0);

        String value1 = (str.substring(0, index1));
        String value2 = (str.substring(index2 + 1, strLength));


        if (StringUtils.isNumeric(value1) && StringUtils.isNumeric(value2)) {
            var num1 = Integer.parseInt(value1);
            var num2 = Integer.parseInt(value2);
            if ((num1 >= 1 && num1 <= 10) && (num2 >= 1 && num2 <= 10)) {
                if (sign == '+') {
                    System.out.println(num1 + num2);
                } else if (sign == '-') {
                    System.out.println(num1 - num2);
                } else if (sign == '*') {
                    System.out.println(num1 * num2);
                } else if (sign == '/') {
                    System.out.println(num1 / num2);
                } else {
                    System.out.println("throws Exception");
                }
            } else {
                System.out.println("throws Exception");
            }

        } else if (!StringUtils.isNumeric(value1) && !StringUtils.isNumeric(value2)) {

            var num1 = valueToNumber(value1);
            var num2 = valueToNumber(value2);
            if ((num1 >= 1 && num1 <= 10) && (num2 >= 1 && num2 <= 10)) {
                if (sign == '+') {
                    System.out.println(convertNumToRoman(num1 + num2));
                } else if (sign == '-') {
                    System.out.println(convertNumToRoman(num1 - num2));
                } else if (sign == '*') {
                    System.out.println(convertNumToRoman(num1 * num2));
                } else if (sign == '/') {
                    System.out.println(convertNumToRoman(num1 / num2));
                } else {
                    System.out.println("throws Exception");
                }
            } else {
                System.out.println("throws Exception");
            }
        }

    }

    private static int valueToNumber (String roman) {
        try {
            if (roman.equals("I")) {
                return 1;
            } else if (roman.equals("II")) {
                return 2;
            } else if (roman.equals("III")) {
                return 3;
            } else if (roman.equals("IV")) {
                return 4;
            } else if (roman.equals("V")) {
                return 5;
            } else if (roman.equals("VI")) {
                return 6;
            } else if (roman.equals("VII")) {
                return 7;
            } else if (roman.equals("VIII")) {
                return 8;
            } else if (roman.equals("IX")) {
                return 9;
            } else if (roman.equals("X")) {
                return 10;
            }
        } catch (InputMismatchException e) {
            throw new InputMismatchException("Неверный формат данных");
        }
        return -1;
    }

    private static String convertNumToRoman (int numArabian) {
        String[] roman = {"O", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI", "XII", "XIII", "XIV", "XV", "XVI", "XVII", "XVIII", "XIX", "XX",
                "XXI", "XXII", "XXIII", "XXIV", "XXV", "XXVI", "XXVII", "XXVIII", "XXIX", "XXX", "XXXI", "XXXII", "XXXIII", "XXXIV", "XXXV", "XXXVI", "XXXVII", "XXXVIII", "XXXIX", "XL",
                "XLI", "XLII", "XLIII", "XLIV", "XLV", "XLVI", "XLVII", "XLVIII", "XLIX", "L", "LI", "LII", "LIII", "LIV", "LV", "LVI", "LVII", "LVIII", "LIX", "LX",
                "LXI", "LXII", "LXIII", "LXIV", "LXV", "LXVI", "LXVII", "LXVIII", "LXIX", "LXX",
                "LXXI", "LXXII", "LXXIII", "LXXIV", "LXXV", "LXXVI", "LXXVII", "LXXVIII", "LXXIX", "LXXX",
                "LXXXI", "LXXXII", "LXXXIII", "LXXXIV", "LXXXV", "LXXXVI", "LXXXVII", "LXXXVIII", "LXXXIX", "XC",
                "XCI", "XCII", "XCIII", "XCIV", "XCV", "XCVI", "XCVII", "XCVIII", "XCIX", "C"
        };
        final String s = roman[numArabian];
        return s;
    }

}
